//Status: OK

/*
Ограничение времени З секунды 
Ограничение памяти 512 МБ 

В самый что ни на есть обычный день Борис решил, что на протяжении следующих n дней он будет покупать своей маме букет ровно из трех цветов. 
Там, где живет Борис, существует всего лишь один магазин цветов, но зато в нем широкий ассортимент: для каждого i от 0 до 10^100 в магазине 
есть ровно один уникальный цветок, стоящий 2^i бурлей. К тому же в магазин ежедневно довозят цветы, которые были выкуплены. 

В i-тый день у Бориса есть a_i бурлей, которые он готов потратить на букет. Борис хочет купить как можно более дорогой букет. 
Для каждого из n дней определите, за какую стоимость Борис купит букет, или сообщите, что на его деньги невозможно купить никакой букет из трех цветов. 

Формат входных данных 
Первая строка содержит число n (1 <= n <= 10^5) — количество дней, в течение которых Борис планирует покупать букеты. 
i-тая из следующих n строк содержит число а_i (1 <= а_i <= 10^18) — количество бурлей, которое есть у Бориса в i-тый день. 

Формат выходных данных
Для каждого a_i в отдельной строке выведите, сколько бурлей Борис потратит на букет в i-тый день, или -1, если он не может купить никакой букет ровно из трех цветов. 

Комментарий к примеру
- в первый день Борис может купить цветы стоимостей 2^1, 2^2 и 2^3; 
- во второй день Борис может купить цветы стоимостей 2^0, 2^1 и 2^6; 
- в третий день Борис не может купить цветы таким образом, чтобы составить букет из трех цветов и уложиться в сумму в 5 бурлей. 

Примеры данных
Ввод 
3
15
67
5
Вывод
14
67
-1
*/

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        int n = scanner.nextInt();
        long[] a = new long[n];
        
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextLong();
        }
        
        for (long money : a) {
            long maxSum = -1;
            for (int i = 0; i < 64; i++) {
                for (int j = i + 1; j < 64; j++) {
                    for (int k = j + 1; k < 64; k++) {
                        long sum = (1L << i) + (1L << j) + (1L << k); 
                        if (sum <= money) {
                            maxSum = Math.max(maxSum, sum);
                        }
                    }
                }
            }
            System.out.println(maxSum);
        }
    }
}
