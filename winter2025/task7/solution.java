//Status: OK

/*
Ограничение времени З секунды
Ограничение памяти 512МБ 

Согласно законам неизвестного государства Т каждый совершеннолетний гражданин должен уметь складывать и умножать числа. 
Дан массив a_1, a_2, ..., a_n. Для каждого p от 1 до k рассмотрим следующий процесс: 
1) для всех i, j таких, что 1 <= i <  j <= n выпишем пары (a_i, a_j) 
2) в полученной последовательности каждую пару заменим но сумму ее элементов
3) в очередной последовательности каждый элемент возведем в степень p 
4) сложим все числа итоговой последовательности
5) заменим значение на ого остаток при делении на 998244353 
Обозначим результат за f(p). Найдите значения f(1), f(2),..., f(k)). 

Формат входных данных 
Первая строка содержит числа n (2 <= n <= 2 * 10^5) и k(1 <= k <= 300) 
Вторая строка содержит числа a_1, a_2, ..., a_n (1 <= a_i <= 10^8)

Формат выходных данных 
Выведите f(1), f(2), ..., f(k) , каждое в новой строке. 

Комментарий к примеру
Значение f(2) было получено следующим образом: 
- после выписывания пар получается последовательность (2,3), (2,4), (3,4); 
- после замены каждой пары на сумму элементов получается набор значений 5, 6, 7 
- после возведения в квадрат получаются числа 25, 36, 49; 
- сумма полученных значений равняется 110; 
- остаток при делении 110 на 998244353 равняется 110. 

Примеры данных
Ввод
3 3
2 3 4
Вывод
18
110
684
*/

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        static final int mod = 998244353;
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        long[] a = new long[n];

        for (int i = 0; i < n; i++) a[i] = scanner.nextLong();
      
        for (int p = 1; p <= k; p++) {
            long sum = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i + 1; j < n; j++) {
                    long pairSum = a[i] + a[j];
                    long result = modPow(pairSum, p, mod);
                    sum = (sum + result) % mod;
                }
            }
            System.out.println(sum);
        }
    }

    //возведение в степень по модулю
    public static long modPow(long base, int exp, int mod) {
        long result = 1;
        while (exp > 0) {
            if (exp % 2 == 1) result = (result * base) % mod;
            base = (base * base) % mod;
            exp /= 2;
        }
        return result;
    }
}
